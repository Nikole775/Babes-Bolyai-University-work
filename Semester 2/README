This folder contains my work from the second semester, where I built upon the foundational knowledge from Semester 1 and dove deeper into essential computer science topics. The focus was on mastering advanced programming paradigms, algorithms, and system-level concepts.

Courses Covered:

💻 Object-Oriented Programming and Data Structures (C++):
An in-depth exploration of object-oriented programming principles such as encapsulation, inheritance, and polymorphism, along with implementation of data structures like linked lists, stacks, queues, and trees.

🖥️ Operating Systems (Ubuntu):
Understanding operating system concepts such as process management, file systems, and synchronization, with hands-on experience using Ubuntu as a development and testing environment.

📊 Graph Algorithms (Python):
Study and implementation of graph algorithms such as BFS, DFS, shortest paths, and spanning trees, highlighting their applications in real-world problems.

📐 Geometry and Dynamic Systems:
Analytical and computational approaches to geometric problems and dynamic systems, focusing on applications in physics, engineering, and computer graphics.

This folder reflects my transition from theoretical understanding to practical implementation, with projects and assignments demonstrating problem-solving skills, algorithmic thinking, and hands-on experience with system-level and graphical concepts.
